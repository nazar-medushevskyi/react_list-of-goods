{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortType","NONE","isReversed","reorderOptions","setReorderOptions","visibleGoods","goods","ALPHABET","sort","LENGTH","a","b","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAA4CC,mBAAyB,CACnEC,SAAUJ,EAASK,KACnBC,YAAY,IAFd,mBAAOC,EAAP,KAAuBC,EAAvB,KAiCMC,EA1DD,SACLC,EADK,GAGJ,IADCN,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOC,GAEzB,OAAQN,GACN,KAAKJ,EAASW,SACZF,EAAaG,OACb,MACF,KAAKZ,EAASa,OACZJ,EAAaG,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAU7C,OAJIV,GACFG,EAAaQ,UAGRR,EAqCcS,CAAkBjB,EAAiBM,GAExD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,kCAA6BZ,EAAeH,WAAaJ,EAASW,SAAW,YAAc,IACpGU,QApCyB,WAC/Bb,EAAkB,CAChBJ,SAAUJ,EAASW,SACnBL,YAAY,KA8BV,iCAQA,wBACEc,KAAK,SACLD,UAAS,qCAAgCZ,EAAeH,WAAaJ,EAASa,OAAS,YAAc,IACrGQ,QArCmB,WACzBb,EAAkB,CAChBJ,SAAUJ,EAASa,OACnBP,YAAY,KA+BV,4BAQA,wBACEc,KAAK,SACLD,UAAS,qCAAgCZ,EAAeD,WAAa,YAAc,IACnFe,QAtCc,WACpBb,EAAkB,2BACbD,GADY,IAEfD,YAAaC,EAAeD,eAgC1B,qBAQCC,EAAeH,WAAaJ,EAASK,MACpC,wBACEe,KAAK,SACLD,UAAU,mBACVE,QAxCU,WAClBb,EAAkB,CAChBJ,SAAUJ,EAASK,KACnBC,YAAY,KAkCR,sBAUJ,6BACGG,EAAaa,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC7HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8a8213cb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reorderOptions, setReorderOptions] = useState<ReorderOptions>({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n\n  const handleSortAlphabetically = () => {\n    setReorderOptions({\n      sortType: SortType.ALPHABET,\n      isReversed: false,\n    });\n  };\n\n  const handleSortByLength = () => {\n    setReorderOptions({\n      sortType: SortType.LENGTH,\n      isReversed: false,\n    });\n  };\n\n  const handleReverse = () => {\n    setReorderOptions({\n      ...reorderOptions,\n      isReversed: !reorderOptions.isReversed,\n    });\n  };\n\n  const handleReset = () => {\n    setReorderOptions({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, reorderOptions);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info is-light ${reorderOptions.sortType === SortType.ALPHABET ? 'is-active' : ''}`}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success is-light ${reorderOptions.sortType === SortType.LENGTH ? 'is-active' : ''}`}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning is-light ${reorderOptions.isReversed ? 'is-active' : ''}`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {reorderOptions.sortType !== SortType.NONE && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}